"
I am an inline block generated by inline splitter, to parse inline text.

I am characterized by:
- start & end: locations of my opener & closer delimiters in initial string
- substring: concerned text (without delimiters so)
- kind: my type, symbol which must be the same than my relative delimiter type (#basic for normal text)
- children: array in case of nested inline blocks


"
Class {
	#name : #'GHMInlineBlock_v2',
	#superclass : #Object,
	#instVars : [
		'substring',
		'start',
		'end',
		'kind',
		'children'
	],
	#category : #'GithubMarkdown-Model - inline'
}

{ #category : #'instance creation' }
GHMInlineBlock_v2 class >> from: aStartInteger to: anEndInteger withKind: aKind withSubstring: aString withChildren: aChildren [
	^ self new start: aStartInteger; end: anEndInteger; kind: aKind; substring: aString; children: aChildren; yourself.
	
]

{ #category : #accessing }
GHMInlineBlock_v2 >> children [
	^ children
]

{ #category : #accessing }
GHMInlineBlock_v2 >> children: anArray [
	children := anArray
]

{ #category : #printing }
GHMInlineBlock_v2 >> childrenPrintOn [
	^ ((children asString) allButFirst: 9) allButLast
]

{ #category : #accessing }
GHMInlineBlock_v2 >> end [
	^ end
]

{ #category : #accessing }
GHMInlineBlock_v2 >> end: anInteger [
	end := anInteger
]

{ #category : #accessing }
GHMInlineBlock_v2 >> kind [
	^ kind
]

{ #category : #accessing }
GHMInlineBlock_v2 >> kind: aKind [
	kind := aKind
]

{ #category : #printing }
GHMInlineBlock_v2 >> printOn: aStream [
	(self kind == #basic) 
		ifTrue: [ 
			aStream nextPutAll: self substring
		] 
		ifFalse: [ 
			|contents|
			children ifEmpty: [ contents := self substring ] ifNotEmpty: [ contents := self childrenPrintOn ].
			aStream nextPut: $[;
				nextPutAll: contents;
				nextPut: $];
				nextPut: $(;
				nextPutAll: self kind;
				nextPut: $) 
		]
			
]

{ #category : #accessing }
GHMInlineBlock_v2 >> start [ 	
	^ start
]

{ #category : #accessing }
GHMInlineBlock_v2 >> start: anInteger [
	start := anInteger 
]

{ #category : #accessing }
GHMInlineBlock_v2 >> substring [
	^ substring
]

{ #category : #accessing }
GHMInlineBlock_v2 >> substring: aSubString [
	substring := aSubString
]
